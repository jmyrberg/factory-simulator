id: factory
name: Factory
randomize: true
monitor: -1

materials:
  - id: material1
    name: Material1

consumables:
  - id: consumable1
    name: Consumable1

products:
  - id: product1
    name: Product1
  - id: product2
    name: Product2
  - id: product3
    name: Product3

containers:
  - id: materialcontainer1
    name: MaterialContainer(Material1)
    content: material1
    capacity: 1000
  - id: consumablecontainer1
    name: ConsumableContainer(Consumable1)
    content: consumable1
    capacity: 500
  - id: productcontainer1
    name: ProductContainer(Product1)
    content: product1
  - id: productcontainer2
    name: ProductContainer(Product2)
    content: product2
  - id: productcontainer3
    name: ProductContainer(Product3)
    content: product3

boms:
  - id: bom1
    name: BOM(Product1)
    materials:
      - id: material1
        consumption: 10
    consumables:
      - id: consumable1
        consumption: 6.25
    products:
      - id: product1
        quantity: 10

  - id: bom2
    name: BOM(Product2)
    materials:
      - id: material1
        consumption: 7
    consumables:
      - id: consumable1
        consumption: 4.75
    products:
      - id: product2
        quantity: 10

  - id: bom3
    name: BOM(Product3)
    materials:
      - id: material1
        consumption: 13
    consumables:
      - id: consumable1
        consumption: 7.75
    products:
      - id: product3
        quantity: 10

programs:
  - id: program1
    name: Program1
    bom: bom1
    temp-factor: 1.0
  - id: program2
    name: Program2
    bom: bom2
    temp-factor: 1.25
  - id: program3
    name: Program3
    bom: bom3
    temp-factor: 4.0

schedules:
  - id: operating-schedule
    name: OperatingSchedule
    type: operating
    blocks:
      - name: Cron(7:30, 1)
        cron: 30 7 * * *
        duration-hours: 4
        action:
          name: switch-program
          kwargs:
            program_id: program1
      - name: Cron(12:30, 2)
        cron: 30 12 1-31/2 * *
        duration-hours: 3
        action:
          name: switch-program
          kwargs:
            program_id: program2
      - name: Cron(12:30, 3)
        cron: 30 12 2-30/2 * *
        duration-hours: 3
        action:
          name: switch-program
          kwargs:
            program_id: program3
      - name: Cron(15th at 06:00, M)
        cron: 00 06 15 * *
        duration-hours: 24
        priority: -1
        action:
          name: maintenance

  - id: procurement-schedule
    name: ProcurementSchedule
    type: default
    blocks:
      - name: Cron(Mon 6:00, material1)
        cron: 00 6 * * 0
        duration-hours: 1
        action:
          name: procurement
          kwargs:
            content_uid: material1
            quantity: 600
      - name: Cron(Fri 18:00, consumable1)
        cron: 00 18 * * 6
        duration-hours: 1
        action:
          name: procurement
          kwargs:
            content_uid: consumable1
            quantity: 400

maintenance:
  - id: maintenance1
    name: Maintenance

machines:
  - id: machine1
    name: Machine
    schedule: operating-schedule
    programs: [program1, program2, program3]
    default-program: program1
    containers:
      [
        materialcontainer1,
        consumablecontainer1,
        productcontainer1,
        productcontainer2,
        productcontainer3,
      ]
    maintenance: maintenance1

operators:
  - id: operator1
    name: John
    machine: machine1

collectors:
  - id: collector
    name: Variable collector
    variables:
      - id: factory.datetime
        name: Factory.Datetime
        value-map: >
          lambda x: x.strftime("%Y-%m-%d %H:%M:00")
      - id: machine1.state
        name: Machine.State
        value-map: >
          lambda x: {
            "off": 0,
            "on": 1,
            "production": 2,
            "error": 3
          }.get(x, x)
      - id: machine1.production_interrupt_code
        name: Machine.ProductionInterruptCode
        value-map:
      - id: machine1-temperature-sensor.temperature
        name: Machine.Temperature
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: machine1.is_planned_operating_time
        name: Machine.IsPlannedOperatingTime
        value-map:
      - id: program1.consumption_consumable1
        name: Program1.Consumable.Consumption
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: program1.consumption_material1
        name: Program1.Material.Consumption
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: program1.latest_batch_id_material1
        name: Program1.Material.MaterialId
        value-map:
      - id: program1.product_quantity_product1
        name: Program1.Product1.Quantity
        value-map: "lambda x: int(round(x, 0)) if x is not None else x"
      - id: program2.consumption_consumable1
        name: Program2.Consumable.Consumption
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: program2.consumption_material1
        name: Program2.Material.Consumption
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: program2.latest_batch_id_material1
        name: Program2.Material.MaterialId
        value-map:
      - id: program2.product_quantity_product2
        name: Program2.Product2.Quantity
        value-map: "lambda x: int(round(x, 0)) if x is not None else x"
      - id: program3.consumption_consumable1
        name: Program3.Consumable.Consumption
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: program3.consumption_material1
        name: Program3.Material.Consumption
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: program3.latest_batch_id_material1
        name: Program3.Material.MaterialId
        value-map:
      - id: program3.product_quantity_product3
        name: Program3.Product3.Quantity
        value-map: "lambda x: int(round(x, 0)) if x is not None else x"
      - id: consumablecontainer1.consumablecontainer1_post_level
        name: ConsumableContainer.Quantity
        value-map: "lambda x: round(x, 2) if x is not None else x"
      - id: materialcontainer1.batches_quantity
        name: MaterialContainer.Quantity
        value-map: "lambda x: round(x, 2) if x is not None else x"

exporters:
  - id: csv-exporter
    type: csv
    filepath: results/run.csv
    interval-secs: 60
    collector: collector
